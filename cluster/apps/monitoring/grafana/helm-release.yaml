---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      chart: grafana
      version: 6.48.0
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  values:
    # image:
    #   repository: ghcr.io/k8s-at-home/grafana
    replicas: 1
    deploymentStrategy:
      type: Recreate
    defaultDashboardsTimezone: America/New_York
    env:
      GF_EXPLORE_ENABLED: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_LOG_FILTERS: rendering:debug
      GF_DATE_FORMATS_FULL_DATE: "MMM Do, YYYY hh:mm:ss a"
    adminPassword: "${SECRET_GRAFANA_PASSWORD}"
    envValueFrom:
      DB_USER:
        secretKeyRef:
          key: username
          name: grafana-pg-creds
      DB_PASSWORD:
        secretKeyRef:
          key: password
          name: grafana-pg-creds
    grafana.ini:
      server:
        root_url: "https://grafana.${DOMAIN_2}"
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: false
      log:
        mode: console
      grafana_net:
        url: https://grafana.net
      database:
        type: "postgres"
        host: "${POSTGRESQL_ADDRESS}:5432"
        name: grafana
        ssl_mode: disable 
        user: $__env{DB_USER}
        password: $__env{DB_PASSWORD}
      auth.basic:
        disable_login_form: false
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    datasources:
      datasources.yaml:
        apiVersion: 1
        # list of datasources that should be deleted from the database
        deleteDatasources:
          - name: Loki
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://thanos-query.monitoring:9090/
            isDefault: true
          - name: Loki
            type: loki
            access: proxy
            url: http://loki.monitoring:3100
    dashboards:
      default:
        # # Ref: https://grafana.com/grafana/dashboards/12175
        # calico-felix:
        #   gnetId: 12175
        #   revision: 5
        #   datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/2842
        ceph-cluster:
          gnetId: 2842
          revision: 14
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/5336
        ceph-osd:
          gnetId: 5336
          revision: 5
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/5342
        ceph-pools:
          gnetId: 5342
          revision: 5
          datasource: Prometheus
        # # Ref: https://grafana.com/grafana/dashboards/11462
        # traefik:
        #   gnetId: 11462
        #   revision: 1
        #   datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/13502
        minio:
          gnetId: 13502
          revision: 18
          datasource: Prometheus
        # # Ref: https://grafana.com/grafana/dashboards/11315
        # unifi-client-insights:
        #   gnetId: 11315
        #   revision: 8
        #   datasource: Prometheus
        # # Ref: https://grafana.com/grafana/dashboards/11311
        # unifi-network-sites:
        #   gnetId: 11311
        #   revision: 4
        #   datasource: Prometheus
        # # Ref: https://grafana.com/grafana/dashboards/11314
        # unifi-uap-insights:
        #   gnetId: 11314
        #   revision: 9
        #   datasource: Prometheus
        # # Ref: https://grafana.com/grafana/dashboards/11312
        # unifi-usw-insights:
        #   gnetId: 11312
        #   revision: 8
        #   datasource: Prometheus
        # # Ref: https://grafana.com/grafana/dashboards/13665
        # speedtest:
        #   gnetId: 13665
        #   revision: 4
        #   datasource: Prometheus
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/control-plane.json
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/1860
        node-exporter-full:
          gnetId: 1860
          revision: 23
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
      datasources:
        enabled: true
        searchNamespace: ALL
    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: "traefik"
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        traefik.ingress.kubernetes.io/router.middlewares: "networking-rfc1918@kubernetescrd"
        cert-manager.io/cluster-issuer: "letsencrypt-production"
      hosts:
        - "grafana.${DOMAIN_2}"
      tls:
        - hosts:
            - "grafana.${DOMAIN_2}"
          secretName: "grafana-${DOMAIN_2/./-}-tls"
    serviceAccount:
      create: true
      autoMount: true
    persistence:
      enabled: true
      existingClaim: grafana-config-v1
    # tolerations:
    #   - key: "node-role.kubernetes.io/master"
    #     operator: "Exists"

    resources:
      requests:
        cpu: 23m
        memory: 100Mi
      limits:
        memory: 400Mi

    podAnnotations:
      configmap.reloader.stakater.com/reload: "grafana"