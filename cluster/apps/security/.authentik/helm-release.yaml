---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: security
spec:
  interval: 5m
  chart:
    spec:
      chart: authentik
      version: 2022.8.2
      sourceRef:
        kind: HelmRepository
        name: authentik-charts
        namespace: flux-system
      interval: 5m
  values:
    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      fsGroupChangePolicy: "OnRootMismatch"
    fullnameOverride: authentik
    image:
      name: ghcr.io/goauthentik/server
      tag: 2021.12.5
      pullPolicy: IfNotPresent

    ingress:
      enabled: true
      ingressClassName: "traefik"
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        traefik.ingress.kubernetes.io/router.middlewares: "networking-cloudflare-ips@kubernetescrd"
        hajimari.io/enable: "true"
        hajimari.io/icon: "shield-account-variant"        
        # external-dns/is-public: "true"
        # external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
      hosts:
      - host: "id.${SECRET_DOMAIN}"
        paths:
        - path: "/"
          pathType: Prefix
      tls:
      - hosts:
        - "id.${SECRET_DOMAIN}"

    authentik:
      secret_key: "${SECRET_AUTHENTIK_SECRET_KEY}"
      log_level: debug

      outposts:
        docker_image_base: ghcr.io/goauthentik/%(type)s:%(version)s

      postgresql:
        host: '${POSTGRESQL_ADDRESS}'
        name: authentik
        user: authentik
        password: "${SECRET_AUTHENTIK_POSTGRES_PASSWORD}"
      redis:
        host: '{{ .Release.Name }}-redis-master'
        password: "${AUTHENTIK_REDIS_PASSWORD}"
      email:
        host: "${SECRET_AUTHENTIK_EMAIL_HOST}"
        port: 587
        use_ssl: true
        username: "${SECRET_AUTHENTIK_USER}"
        password: "${SECRET_AUTHENTIK_EMAIL_KEY}"
        from: "${SECRET_AUTHENTIK_EMAIL_FROM}"

    postgresql:
      enabled: false

    redis:
      enabled: true
      auth:
        enabled: true
        password: "${AUTHENTIK_REDIS_PASSWORD}"
     
      #outposts:
      #  docker_image_base: beryju.org/authentik/outpost-%(type)s:gh-%(build_hash)s

    # # # persistence:
    # # #   media:
    # # #     enabled: true
    # # #     mountPath: /media
    # # #     storageClass: rook-ceph-block
    # # #     accessMode: ReadWriteOnce
    # # #     size: 5Gi
    # volumeMounts:
    # - name: media
    #   mountPath: /media
    # volumes:
    # - name: media
    #   persistentVolumeClaim:
    #     claimName: authentik-media-v1
