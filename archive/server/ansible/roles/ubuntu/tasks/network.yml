---

- name: network | check for bridge-nf-call-iptables
  ansible.builtin.stat:
    path: /proc/sys/net/bridge/bridge-nf-call-iptables
  register: bridge_nf_call_iptables_result

- name: network | sysctl | set config
  ansible.builtin.blockinfile:
    path: /etc/sysctl.d/99-kubernetes-cri.conf
    mode: 0644
    create: true
    block: |
      net.ipv4.ip_forward = 1
      net.bridge.bridge-nf-call-iptables = 1
  when:
  - bridge_nf_call_iptables_result.stat.exists
  register: sysctl_network

- name: network | sysctl | reload
  ansible.builtin.shell: sysctl -p /etc/sysctl.d/99-kubernetes-cri.conf
  when:
  - sysctl_network.changed
  - bridge_nf_call_iptables_result.stat.exists

# - name: network | check for vm cloud-init config
#   ansible.builtin.stat:
#     path: /etc/netplan/50-cloud-init.yaml
#   register: cloud_init_result

# - name: network | set ceph interface mtu
#   ansible.builtin.lineinfile:
#     path: /etc/netplan/50-cloud-init.yaml
#     regexp: '^\s*mtu'
#     insertafter: '^\s*set-name: eth1'
#     line: '            mtu: 9000'
#   register: netplan_apply
#   when: cloud_init_result.stat.exists

# - name: network | apply netplan
#   ansible.builtin.shell: netplan apply
#   when: netplan_apply.changed
